// Вынести в другое активити
    /*@Composable
    fun createGrid(datesCount: List<StringInt>) {
        LazyVerticalGrid(
            columns = GridCells.Fixed(2),
            horizontalArrangement = Arrangement.spacedBy(15.dp),
            verticalArrangement = Arrangement.spacedBy(15.dp),
            contentPadding = PaddingValues(0.dp, 15.dp, 0.dp, 15.dp)
        ) {
            item(span = { GridItemSpan(1) }) {
                createOptionCard()
            }
            item(span = { GridItemSpan(1) }) {
                createAddCard()
            }
            datesCount.forEachIndexed { index, data ->
                if (index == 0) {
                    data.string += " (сегодня)"
                    item(span = { GridItemSpan(maxLineSpan) }) {
                        createListCard(
                            dateCount = data,
                        )
                    }
                } else item(span = { GridItemSpan(1) }) {
                    createListCard(
                        dateCount = data,
                    )
                }

            }
        }
    }*/

    /*@OptIn(ExperimentalMaterialApi::class)
    @Composable
    fun createListCard(
        dateCount: StringInt,
        //padding: PaddingValues = PaddingValues(top = 20.dp)
    ) {

        Card(shape = RoundedCornerShape(15.dp), elevation = 4.dp,
            //modifier = Modifier
            //.fillMaxWidth()
            //.height(150.dp)
            //.padding(padding)
            onClick = { toPick(dateCount) }) {

            Box(Modifier.padding(20.dp)) {

                Column(
                    Modifier.fillMaxSize(), verticalArrangement = Arrangement.SpaceBetween
                ) {

                    Text(
                        text = dateCount.int.toString(),
                        modifier = Modifier
                            .fillMaxWidth()
                            .padding(bottom = 0.dp),
                        //style = TextStyle(fontWeight = FontWeight.Bold),
                        fontSize = 40.sp,
                        color = colorResource(id = R.color.main)
                    )
                    Text(
                        text = dateCount.string,
                        Modifier
                            .alpha(0.5f)
                            .padding(top = 5.dp, bottom = 0.dp),
                        fontSize = 20.sp,

                        )
                }
            }
        }
    }*/